{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/lib/interfaces.ts"],"names":[],"mappings":"AASC,CAAC;AAKD,CAAC;AAOD,CAAC;AAeD,CAAC","sourcesContent":["export interface ZoomPluginOptions {\r\n    authenticate?: (userId: string, encryptionSecret: string, success?: Function, error?: Function) => {},\r\n    enroll?: (userId: string, encryptionSecret: string, success?: Function, error?: Function) => {},\r\n    getSdkStatus?(success?: Function | undefined, error?: Function | undefined): void,\r\n    getUserEnrollmentStatus?: (userId: string, success?: Function, error?: Function) => {},\r\n    getVersion?: (success?: Function, error?: Function) => {},\r\n    initialize?: (appToken: string | undefined, success?: Function, error?: Function) => {},\r\n    isUserEnrolled?: (userId: string, success?: Function, error?: Function) => {},\r\n    verify?: (success?: Function, error?: Function) => {}\r\n};\r\n\r\nexport interface ZoomConfig {\r\n    token?: string,\r\n    logs?: boolean\r\n};\r\n\r\nexport interface EnrollCallbackResponse {\r\n    faceEnrollmentState: string\r\n    livenessResult: string\r\n    status: string,\r\n    successful: boolean\r\n};\r\n\r\nexport interface AuthCallbackResponse {\r\n    successful: boolean,\r\n    status: string,\r\n    faceAuthenticatorState: string,\r\n    livenessResult: string,\r\n    countOfFaceFailuresSinceLastSuccess: number,\r\n    consecutiveLockouts: number\r\n}\r\n\r\nexport interface ZoomInitOptions {\r\n    code: number,\r\n    state: string,\r\n    initalized: boolean\r\n};\r\n\r\nexport interface ZoomVerifyResponse {\r\n    status: string,\r\n    successful: boolean\r\n}"]}